pipeline {
    agent {
        docker {
            image 'docker:latest'
            args '-u root'
        }
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                sh 'docker build -t myapp .'
            }
        }

        stage('Run') {
            steps {
                script {
                    def containerID = sh(returnStdout: true, script: 'docker run -d myapp').trim()
                    sh "docker ps -f id=${containerID}"
                    sh "docker logs ${containerID}"
                    sh "docker stop ${containerID}"
                }
            }
        }
    }
}